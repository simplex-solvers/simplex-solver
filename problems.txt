Problema da revisão (maximização)
c = np.array([2, 1, 3])
A = np.array([[5, 2, 7], [3, 2, 5]])
b = np.array([420, 280])
constraint = ["=", ">="]
problem_type = "max"
Link: https://linprog.com/en/main-simplex-method/result;queryParams=%7B%22n%22:2,%22m%22:3,%22max_min%22:1,%22values%22:%5B%5B%225%22,%222%22,%227%22,%22420%22%5D,%5B%223%22,%222%22,%225%22,%22280%22%5D%5D,%22function%22:%5B%222%22,%221%22,%223%22%5D,%22equalSign%22:%5B1,%223%22%5D%7D


Problema protótipo
c = np.array([3, 5])
A = np.array([[1, 0], [0, 2], [3, 2]])
b = np.array([4, 12, 18])
constraints = ["<=", "<=", "<="]
problem_type = "max"


#Problema Radioterápico
c = np.array([0.4, 0.5])
A = np.array([[0.3, 0.1], [0.5, 0.5], [0.6, 0.4]])
b = np.array([2.7, 6, 6])
constraints = ["<=", "=", ">="]
problem_type = "min"


Problema da revisão
c = np.array([2, 1, 3])
A = np.array([[5, 2, 7], [3, 2, 5]])
b = np.array([420, 280])
constraints = ["=", ">="]
problem_type = "min"


Problema ilimitado
c = [1, 1, 0]
A = [[-1, 4, 1]]
b = [13]
constraints = ["<=", "<=", "<="]

Problema na forma dual
c = np.array([4, 12, 18])
A = np.array([[-1, 0, -3], [0, -2, -2]])
b = np.array([-3, -5])
constraints = ["<=", "<="]
problem_type = "min"

Problema para ser transformado em dual
c = np.array([2, 3, 5, 6])
A = np.array([[2, 2, 3, 1], [-1, 1, -1, 3]])
b = np.array([3, -3])
constraints = [">=", "<="]
problem_type = "min"